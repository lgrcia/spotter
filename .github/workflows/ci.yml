name: spotter/ci

on:
  merge_group:
  workflow_dispatch:
  pull_request:
  release:
    types: [published]
    branches:
      - main
    tags:
      - "*"

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        python-version: ["3.10", "3.11"]
        session:
          - "test"

    steps:
      - name: "Init: checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --extra test

      - name: Run tests
        run: uv run pytest tests

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: "3.11"

      - name: Install the project
        run: uv sync --dev

      - name: Build the project
        run: uv build

      - name: Check the distribution
        run: |
          uv tool install twine
          uvx twine check --strict dist/*

      - uses: actions/upload-artifact@v4
        with:
          path: dist/*

  publish:
    environment:
      name: pypi
      url: https://pypi.org/p/spotter
    permissions:
      id-token: write
    needs: [tests, build]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@v1.8.11
